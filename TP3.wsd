@startuml TP3_PerfectCell
' Pueden utilizar https://plantuml-editor.kkeisuke.com/ para copiar y pegar el codigo. 
' La pagina tiene cheatsheet para ver la sintaxis. 
skinparam SequenceMessageAlignment center

'Los getters y setter no pongo porque molestas.
' Por ahora solo pondre metodos abstractos o metodos importantes de ubicar.
class Almacen{
}

abstract class Casillero{
	- color: string
 	+ {abstract} saludar(): void
 	+ {abstract} es_casillero_transitable(): bool
	+ {abstract} esta_ocupado(): bool
	+ {abstract} obtener_contenido(): string

}

class Coordenada{
	- x: std::size_t
	- y: std::size_t
}

class Edificio{
	- nombre: string
    - materiales[CANT_MATERIALES_EDIFICIOS]: int
	- maximo_permitidos: int
	- construidos: int

 	+ Edificio(nombre: string, piedra: int, madera: int, metal: int, maximo_permitidos: int): Edificio
	+ {abstract} saludar():void
	+ {abstract} producir_material():Material


}
'Menu?
class Menu{
	+ mostrar_menu_inicio(): void
	+ mostrar_menu(): void

	+ procesar_opcion(int opcion_elegida): bool
	+ es_opcion_valida(string opcion): bool
	+ limpiar_pantalla(): void

	- construir_edificio(): void
    - demoler_edificio(): void
	- mostrar_edificios(): void
	- mostrar_materiales(): void
	- mostrar_mapa(): void
	- mostrar_coordenada(): void
	- mostrar_construidos(): void
    - producir_recursos(): void
    - lluvia_de_recursos(): void
    - vaciar_materiales(): void

}
class Programa{
    - planos: Diccionario<Edificio>
	- estado: ESTADO_JUEGO
	
	+ init(): void
	+ run(): void
	+ exit(): void

	- cargar_archivos(string ruta_materiales, string ruta_ubicaciones): void
	- guardar_archivos(string ruta_materiales, string ruta_ubicaciones): void

}

class Mapa{
	- filas: std::size_t
    - columnas: std::size_t
}

class Material{
}

'TODO: 'Hacer abstractas
abstract class Productor{
	- vida: int

	+ info_producto(): string
    + producir_material(): Material
	+ {abstract} reparar(): void
}
class NoProductor{
    + saludar():void
	+ producir_material():Materia
}


abstract class Jugador{
	+ {abstract} mover(destino: Coordenada, mapa :Mapa)
	- recolectar(): Material
}

class Parser{}
class ParserEdificio{}
class ParserInventario{}
class ParserMapa{}
class ParserUbicacion{}

' RELACIONES '
Programa *-- Menu: - menu
Programa *-- Mapa: - mapa
Programa *--"*" Jugador: -jugadores
Almacen *--"*" Material: - lista_material
Mapa *--"*" Casillero: - terreno

Casillero <|-- CasilleroConstruible
Casillero <|-- CasilleroTransitable
Casillero <|-- CasilleroInaccesible

CasilleroTransitable <|-- Camino
CasilleroTransitable <|-- Betun
CasilleroTransitable <|-- Muelle


Edificio <|-- Productor
Edificio <|-- NoProductor

NoProductor <|-- Obelisco

Productor *-- Material: - producto

Productor <|-- Aserradero
Productor <|-- Escuela
Productor <|-- Fabrica
Productor <|-- Mina
Productor <|-- MinaOro
Productor <|-- PlantaElectrica

Parser <|-- ParserEdificio
Parser <|-- ParserUbicacion
Parser <|-- ParserMapa
Parser <|-- ParserInventario

Jugador <|-- JugadorUno
Jugador <|-- JugadorDos 

Jugador *-- Almacen: - inventario
Jugador *--"*" Coordenada: - lista_ubicaciones
'InfoEdificio ??
'Mapaedificio ??

@enduml